version: '3.8'

services:

  upload:
    image: airenas/roxy-upload:${upload_version}
    restart: on-failure
    environment:
      - FILER_URL=minio:9000
      - FILER_KEY=${MINIO_PASS}
      - DB_URL=postgres://roxy:${PSQL_PASS}@db:5432/asr?sslmode=disable
    ports:
      - 8181:8000    

  migrate:
    image: airenas/roxy-dbmigrate:${migrate_version}
    command: ["-path", "/migrations", "-database",  "postgres://roxy:${PSQL_PASS}@db:5432/asr?sslmode=disable", "up"]
    depends_on:
      db:
        condition: service_healthy

  integration-tests:
    build:
      context: .
      dockerfile: ./Dockerfile.test
    depends_on:
      - upload
      - db
    environment:
      - UPLOAD_URL=http://upload:8000  
      - DB_URL=postgres://roxy:${PSQL_PASS}@db:5432/asr?sslmode=disable   
    volumes:
      - ../../:/go/src/
    command: -tags integration -v -count=1 ./testing/integration/...      

  db:
    image: postgres:15.1-alpine3.16
    restart: on-failure
    volumes:
    #   - db-data:/var/lib/postgresql/data
    - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_PASSWORD=${PSQL_PASS}
      - POSTGRES_INITDB_ARGS=--auth=password
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2022-11-10T18-20-21Z
    restart: on-failure
    volumes:
     - ./data/minio:/data
    environment:
     - MINIO_ROOT_USER=roxy
     - MINIO_ROOT_PASSWORD=${MINIO_PASS}
    ports:
      - 9000:9000
      - 9090:9090
    command: ["server", "/data", "--console-address", ":9090"]  
